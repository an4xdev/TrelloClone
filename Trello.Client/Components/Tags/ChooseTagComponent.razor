<ModalHeader>
    <ModalTitle>
        Choose Tags for task
    </ModalTitle>
    <CloseButton />
</ModalHeader>
<ModalBody>
    @if(Tags != null && Checked.Count != 0)
    {
        @foreach(var tag in Tags)
        {
            <Div Flex="Flex.Row.AlignItems.Center" Margin="Margin.Is3.FromTop" Border="Border.Is3.Secondary.OnAll.Rounded" Padding="Padding.Is1.OnAll.Is3.FromStart">
                <Div>
                    <Check TValue="bool" onchange="@(() => CheckChanged(tag.ID))"/>
                </Div>
                <Div>
                    <div style="background:@tag.BackgroundColor;color:@tag.FontColor;padding:10px;min-width:100px;">
                        @tag.Name
                    </div>
                </Div>
            </Div>
        }
    }
</ModalBody>
<ModalFooter>
    <Button Color="Color.Primary" Clicked="ModalService.Hide">Close</Button>
</ModalFooter>
@code {
    [Inject] IModalService ModalService { get; set; }
    [Parameter] public List<TagDTO> Tags { get; set; }
    [Parameter] public List<bool> Checked { get; set; }
    [Parameter] public Action<int, bool> CheckBoxChecked { get; set; }

    private void CheckChanged(int ID)
    {
        Checked[ID - 1] = !Checked[ID - 1];
        CheckBoxChecked.Invoke(ID, Checked[ID - 1]);
    }
}
